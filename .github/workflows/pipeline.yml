name: Pipeline CI/CD

on:
  push:
    branches:
      - main
      - pipeline-setup

jobs:
  Workflow_Inicial:
    name: Configurar Workflow Inicial
    runs-on: ubuntu-latest
    steps:
      - name: Configurar Workflow Inicial
        uses: actions/checkout@v3

  SCA:
    name: Análisis SCA con Dependency Check
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Descargar Dependency Check
        run: |
          curl -L --retry 3 --max-time 60 -o dependency-check.zip https://github.com/jeremylong/DependencyCheck/releases/download/v11.1.1/dependency-check-11.1.1-release.zip

      - name: Descomprimir Dependency Check
        run: |
          unzip dependency-check.zip -d dependency-check
          ls -la dependency-check

      - name: Ejecutar análisis SCA
        run: |
          dependency-check/dependency-check/bin/dependency-check.sh --project "CarlaH-laboratorio-final" \
          --scan ./ --format ALL --out ./sca-report \
          --failOnCVSS 4.0

      - name: Subir reporte como artefacto
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: sca-report
          path: ./sca-report/*
      
      - name: Verificar los archivos generados
        run: ls -R ./sca-report

  Image_Security:
    name: Análisis de Seguridad de Imagen Docker con Trivy
    runs-on: ubuntu-latest
    steps:
      - name: Clonar código fuente
        uses: actions/checkout@v3

      - name: Construir Imagen Docker
        run: |
          docker build -t my-app:latest .

      - name: Verificar Imagen Docker
        run: |
          docker images my-app:latest

      - name: Verificar si Docker está corriendo
        run: |
          docker info

      - name: Dar permisos a Docker
        run: |
          sudo usermod -aG docker $USER
          newgrp docker

      - name: Instalar Trivy
        run: |
          wget -qO- https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | bash
          sudo mv ./bin/trivy /usr/local/bin/trivy

      - name: Verificar instalación de Trivy
        run: |
          /usr/local/bin/trivy --version

      - name: Ejecutar análisis de seguridad
        run: |
          mkdir -p ./trivy-report
          /usr/local/bin/trivy image --severity CRITICAL,HIGH,MEDIUM --exit-code 1 --no-progress --format table --output ./trivy-report/trivy-report.txt my-app:latest

      - name: Subir reporte como artefacto
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: ./trivy-report/*